{"version":3,"sources":["components/Button.js","components/Header.js","components/Singletask.js","components/Task.js","components/AddTasks.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAdd","changeBtn","protoTypes","propTypes","string","Singletask","task","onDelete","onToggle","reminder","onDoubleClick","id","day","Task","tasks","map","AddTasks","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","value","onChange","target","placeholder","currentTarget","checked","App","toggleForm","setToggleForm","setstate","Math","floor","random","newt","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf04398e.chunk.js","sourcesContent":["import propTypes from 'prop-types'\r\n\r\nconst Button = ({ color,text , onClick }) => {\r\n    return (\r\n            <button className=\"btn\" style={{backgroundColor  : color}} onClick={onClick}>{text}</button>\r\n    )\r\n}\r\nButton.defaultProps ={\r\n    color: '#000'\r\n}\r\nButton.propTypes = {\r\n    text: propTypes.string,\r\n    color:propTypes.string,\r\n}\r\nexport default Button\r\n","import propTypes from 'prop-types'\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title , onAdd , changeBtn }) => {\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button color={ changeBtn ? 'green' : 'black' } text={ changeBtn ? 'Hide' : 'Show' } onClick={ onAdd }/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = ({\r\n    title :'Task Tracker',\r\n})\r\nHeader.protoTypes = {\r\n    title : propTypes.string,\r\n}\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa';\r\n\r\nconst Singletask = ({task , onDelete , onToggle }) => {\r\n    return (\r\n        <div className={\"task \" + (task.reminder ? \"reminder\" : \"\")} onDoubleClick={() => onToggle(task.id)}>\r\n           <h3>{task.text} <FaTimes onClick={ () => onDelete(task.id)}/></h3>\r\n           <p>{task.day}</p> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Singletask\r\n","import Singletask from './Singletask';\r\n\r\nconst Task = ({tasks , onDelete , onToggle }) => {\r\n\r\n    return (\r\n        <>\r\n          { tasks.map(( task ) => {\r\n              return(\r\n               <Singletask key={task.id} task={ task } onDelete= {onDelete} onToggle={ onToggle }/>\r\n              );\r\n          } )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import { useState } from 'react';\r\n\r\nconst AddTasks = ({onAdd}) => {\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!text | !day ){\r\n            alert('Add task or day');\r\n            return\r\n        }\r\n        onAdd({text,day,reminder})\r\n        setText('');\r\n        setDay('');\r\n        setReminder(false);\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={ onSubmit }>\r\n            <div className='form-control'>\r\n                <label>Add Task</label>\r\n                <input type=\"text\" value={text}  onChange ={ (e) => setText(e.target.value) } placeholder=\"Add task\" />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Add Day and Time</label>\r\n                <input type=\"text\" value={day}  onChange ={ (e) => setDay(e.target.value) } placeholder=\"Add day and time\" />\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\"  value={reminder}  onChange ={ (e) => setReminder(e.currentTarget.checked) } checked={reminder}/>\r\n            </div>\r\n            <input type=\"submit\" value=\"Save\"  className=\"btn btn-block\"/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTasks\r\n","import './App.css';\nimport Header from \"./components/Header\";\nimport Task from \"./components/Task\";\nimport { useState } from 'react';\nimport AddTasks from \"./components/AddTasks\";\n\nfunction App() {\n  const [toggleForm, setToggleForm] = useState(false)\n  const [tasks, setstate] = useState([\n    {\n        id:1,\n        text:'Docter Appointment',\n        day:'5 Feb 2021',\n        reminder:true,\n    },\n    {\n        id:2,\n        text:'Meeting at Office',\n        day:'12 Apr 2021',\n        reminder:false,\n    },\n    {\n        id:3,\n        text:'Shopping',\n        day:'3 March 2021',\n        reminder:true,\n    },\n])\n\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 1000 +1 )\n  const newt = { id ,...task}\n  setstate([ ...tasks , newt]);\n}\n\nconst deleteTask = (id) =>{\n    setstate(tasks.filter((task) => task.id !== id));\n}\nconst reminderToggle = (id) => {\n  setstate(tasks.map((task) => task.id === id ? {\n    ...task, reminder : ! task.reminder \n  } : task));\n}\n  return (\n    <div className=\"container\">\n          <Header onAdd={() => setToggleForm(!toggleForm)} changeBtn={toggleForm}/>\n          {toggleForm && <AddTasks onAdd={addTask}/>}\n          {tasks.length > 0 ? <Task tasks={tasks} onDelete={deleteTask} onToggle={reminderToggle}/> : 'No Tasks' }\n    </div>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}